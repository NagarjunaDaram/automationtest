package com.cdi.automation.service;

import java.util.Map;
import java.util.stream.Stream;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
@Service
public class CDIAutomationService {
	
	private static final Logger logger = LoggerFactory.getLogger(CDIAutomationService.class);
	
	RestTemplate restTemplate;

	
	public  String comparejson() {
		String response =null;
		logger.info("====================In Service========================");
		try {
			response = "Comparing Json" ;
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return response;
	}
	
	 private FlatMapUtil() {
	        throw new AssertionError("No instances for you!");
	    }

	 public static Map<String, Object> flatten(Map<String, Object> map) {
	        return map.entrySet().stream()
	                .flatMap(FlatMapUtil::flatten)
	                .collect(LinkedHashMap::new, (m, e) -> m.put("/" + e.getKey(), e.getValue()), LinkedHashMap::putAll);
	    }
	 private static Stream<Map.Entry<String, Object>> flatten(Map.Entry<String, Object> entry) {

	        if (entry == null) {
	            return Stream.empty();
	        }

	        if (entry.getValue() instanceof Map<?, ?>) {
	            return ((Map<?, ?>) entry.getValue()).entrySet().stream()
	                    .flatMap(e -> flatten(new AbstractMap.SimpleEntry<>(entry.getKey() + "/" + e.getKey(), e.getValue())));
	        }

	        if (entry.getValue() instanceof List<?>) {
	            List<?> list = (List<?>) entry.getValue();
	            return IntStream.range(0, list.size())
	                    .mapToObj(i -> new AbstractMap.SimpleEntry<String, Object>(entry.getKey() + "/" + i, list.get(i)))
	                    .flatMap(FlatMapUtil::flatten);
	        }

	        return Stream.of(entry);
	    }
	    
	    
	
}
